**********      MPESA E-RECEIPT GENERATOR for Android  **********

The purpose of this system is to provide users with a system that is able to generate KRA compliant(eTIMS) receipts when a payment is made through Mpesa.

Problem statement; businesses, especially SMEs such as salons struggle with generating, storing and tracking receipts for Mpesa payments. The traditional hand written receipts do not really meet compliance standards required by the KRA resulting in difficulty during tax audits.
Gap; there not being a way of creating a proof of records for informal transactions such paying a business paying matatu fare to parcel goods. During tax audits KRA will often ask for a proof of the expense.

Payment method (Cash / M-Pesa / Bank)
Reference number (e.g., M-Pesa code, vehicle plate for matatu)
Reason for payment (“Transport to client meeting”)
signature/approval


~ Key features of a valid tax receipt ~ https://www.kra.go.ke/helping-tax-payers/faqs/electronic-tax-invoice
PIN and Name of trader;
Time and Date of the Invoice;
Description of goods/services
Unit cost;
Quantity of supply
Total Gross Amount;
Total Tax Amount;
Tax Rate;
Unique invoice number;
Unique ETR identifier/serial number;
Digital Signature (QR Code);

Functional requirements - what the system must do.
1. Register a business with a unique profile containing the name, email, paybill/till number, kra PIN (optional), phone number.
2. Receive transaction details from Mpesa via Safaricom Daraja API callbacks, store transaction details in the database (amount, receiver's phone no./name/acc no, date, transaction ID)
3. Automatically generate receipts in pdf format when transactions are received. Iclude ID, date, amount, payer details, and business branding. Assign a unique receipt number for each transaction.
4. Notifications - Send receipts via email or SMS containing a link to the receipt. Notify businesses of failed transactions.
5. A dashboard for viewing all transactions in real time, search, filter or download receipts, analytics(view daily totals, number of transactions)
6. **Integration - export receipts to accounting systems, provide APIs for businesses to fetch their receipts programmatically.

NON-FUNCTIONAL requirements - how the system must perform
1. Performance - be able to handle at least 1000 transactions in a day, receipts should be generated within seconds after payment message has been sent.
2. Security - all API endpoints must be protected (JWT or OAuth2). Sensitive data must be encrypted in storage. Must comply with data protection laws (GDPR, Kenya Data Protection Act).
3. Reliability & Availability - system should be available 99.9% uptime. If Safaricom API fails, system must queue and retry transaction processing.
4. Usability - the dashboard must be easy for use for non-technical business owners. Receipts must be clean, professional, and printable.
5. Auditability - every receipt must have an audit trail. Logs must capture failures, retries, and successful deliveries.


User classes & characteristics
- business users: use the dashboard to view transactions and download receipts.
- customers: receive receipts via email or sms
- admin: manages businesses and monitor system performance

Operating Environment
backend- django 
frontend-next.js
database-postgresql
deployment-dockerized environment

~ ~ LOGIC ~ ~
Customer pays via M-Pesa → 
M-Pesa sends callback to your server →
Server validates and stores transaction →
Receipt generator creates PDF →
Receipt is stored + link generated →
Receipt sent via SMS or Email →
Admin can view/download via dashboard

Future  enhancements
- Support for Whatsapp receipts
- API integrations with Quickbooks, Zoho Books, and ERPs
- Advanced analytics (customer spending habits)

Work flow
1. Validating and storing the transaction
2. extracting key fields ((amount, receiver's phone no./name/acc no, date, transaction ID)) stored to a database
3. creates pdf.

Components
1. Mpesa message reader (push)- reads mpesa sms and forwards them to the server. - android sms API
   Listens for incoming SMS
   permissions
   Extracts content
   Sends it via HTTP to your Django server
   concern of battery consumption, security.

2.Python Mpesa sms Parser - regex

3. Python pdf receipt generator